<?php
/**
 * @file
 * Code for the Node add/edit feature.
 */

/**
 * Implements hook_install().
 */
function node_add_edit_install() {
  // Add a 'last updated' field to all content types.
  $field = array(
    'field_name' => 'field_updated',
    'type' => 'text',
  );
  field_create_field($field);
  $types = 	node_type_get_names();
  foreach ($types as $type) {
    $instance = array(
      'field_name' => 'field_updated',
      'label' => 'Last update',
      'entity_type' => 'node',
      'bundle' => $type,
    );

    field_create_instance($instance);
  }

  // Enable add/edit page manager page override.
  // See: https://www.drupal.org/node/1837948
  $page_name = 'node_edit';
  $page = page_manager_get_page_cache($page_name);
  $function = ctools_plugin_get_function($page->subtask, "enable callback");
  $function($page, FALSE);
  menu_rebuild();

  // Run our update script on install. This is not best practice, and could
  // cause issues for sites with large numbers of existing nodes, but I want
  // the titles to be modified immediately for an 'out of box' experience.
  node_add_edit_update_7001();
}

/**
 * Implements hook_uninstall().
 */
function node_add_edit_uninstall() {
  // Delete our 'last updated' field. This will remove all instances too.
  field_delete_field('field_updated');
}

/**
 * Implements hook_update().
 *
 * Updates all node titles to $node->title . ' by ' . author->name.
 *
 * This assumes nodes already exist or dummy nodes have been auto-generated
 * using the devel_generate module.
 */
function node_add_edit_update_7001() {
  $query = db_query("SELECT nid, uid FROM {node}");
  $records = $query->fetchAll();
  foreach($records as $record) {
    $node = node_load($record->nid);
    // Set default username to Anonymous.
    $username = t('Anonymous');
    if ($record->uid > 0) {
      $author = user_load($record->uid);
      $username = $author->name;
    }
    $node->title = $node->title . ' by ' . $username;
    node_save($node);
  }
}
